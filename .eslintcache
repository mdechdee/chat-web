[{"D:\\Github\\chat-web\\src\\index.js":"1","D:\\Github\\chat-web\\src\\reportWebVitals.js":"2","D:\\Github\\chat-web\\src\\App.js":"3","D:\\Github\\chat-web\\src\\components\\TextBox.js":"4","D:\\Github\\chat-web\\src\\components\\TextList.js":"5","D:\\Github\\chat-web\\src\\components\\TextCard.js":"6"},{"size":500,"mtime":1609053009156,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":453,"mtime":1609062278047,"results":"10","hashOfConfig":"8"},{"size":821,"mtime":1609165590335,"results":"11","hashOfConfig":"8"},{"size":851,"mtime":1609061580981,"results":"12","hashOfConfig":"8"},{"size":471,"mtime":1609062520755,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15m6z5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"D:\\Github\\chat-web\\src\\index.js",[],["28","29"],"D:\\Github\\chat-web\\src\\reportWebVitals.js",[],"D:\\Github\\chat-web\\src\\App.js",[],"D:\\Github\\chat-web\\src\\components\\TextBox.js",[],"D:\\Github\\chat-web\\src\\components\\TextList.js",[],"D:\\Github\\chat-web\\src\\components\\TextCard.js",["30"],"import { useTheme } from '@emotion/react';\r\nimport {React, useState} from 'react'\r\nimport {\r\n\tCard,\r\n\tHeading,\r\n\tText\r\n} from 'rebass'\r\n\r\nconst TextCard = props => {\r\n\tconst theme = useTheme();\r\n\tconst [cardProps, setCardProps] = useState(props);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card theme={theme} sx={{mt: '1em'}}>\r\n\t\t\t\t<Heading theme={theme}> {cardProps.title} </Heading>\r\n\t\t\t\t<Text theme={theme}> {cardProps.message} </Text>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TextCard;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":20,"nodeType":"37","messageId":"38","endLine":11,"endColumn":32},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setCardProps' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]